/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import static admin.FrmJournalViewer.txtChartNumber_Journal;
import static java.awt.Color.black;
import static java.awt.Color.green;
import static java.awt.Color.red;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import util.DbConn;
import util.Sutil;
import java.util.Date;
import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import main.FrmAbout;
import main.FrmMain;

/**
 *
 * @author FG
 */
public class FrmAdmin extends javax.swing.JFrame {

    /**
     * Creates new form InputForm
     */
    private Connection conn;
    private int row;
    private String JID_Journal;
    private int jno;
    private int counter;

    /**
     *
     * @param conn
     */
    public FrmAdmin(Connection conn) {
        this.conn = conn;
        initComponents();
        databaseConnection();
        setElements();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        tab = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtChartName_Journal = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtChartNumber_Journal = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtDesc_Journal = new javax.swing.JTextArea();
        btnView_Journal = new javax.swing.JButton();
        btnAddNew_Journal = new javax.swing.JButton();
        btnSaveData_Journal = new javax.swing.JButton();
        btnUpdate_Journal = new javax.swing.JButton();
        btnSearch_Journal = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        txtJID_Journal = new javax.swing.JTextField();
        btnDelete_Journal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtCredit_Journal = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtDebit_Journal = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        lblError = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblJournalMaker = new javax.swing.JTable();
        txtTotalDebit_Journal = new javax.swing.JTextField();
        txtTotalCredit_Journal = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        cboChart_GL = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGL = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtTDebit_GL = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTCredit_GL = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtBalance_GL = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnSave_GL = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        btnSearch_GL = new javax.swing.JButton();
        cboPeriod_GL = new javax.swing.JComboBox<>();
        lblRefresh_GL = new javax.swing.JLabel();
        txtStatus_GL = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTB = new javax.swing.JTable();
        cboPeriod_TB = new javax.swing.JComboBox<>();
        btnSearch_TB = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        txtPID_INV = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        txtPName_INV = new javax.swing.JTextField();
        btnAddProduct_INV = new javax.swing.JButton();
        lblRefreshProduct_GL = new javax.swing.JLabel();
        btnLaunchSearcher = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblBuyProduct = new javax.swing.JTable();
        cboSorterBuyProduct_INV = new javax.swing.JComboBox<>();
        txtPrice_INV = new javax.swing.JTextField();
        btnNewBuyProduct_INV = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        btnUpdateBuyProduct_INV = new javax.swing.JButton();
        btnSearchBuyProduct_INV = new javax.swing.JButton();
        jLabel57 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        dtcProductAdded_INV = new com.toedter.calendar.JDateChooser();
        btnDeleteBuyProduct_INV = new javax.swing.JButton();
        spiQty_INV = new javax.swing.JSpinner();
        jLabel63 = new javax.swing.JLabel();
        txtSubTotal_INV = new javax.swing.JTextField();
        lblRefreshTransactionProduct_GL = new javax.swing.JLabel();
        txtAvg_INV = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        btnProcess_INV = new javax.swing.JButton();
        txtTRID = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        cboProduct_INV = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        jTextField15 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblInventory_INV = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        lblRefreshInventory_INV = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        txtID_INV = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        txtProductPrice_INV = new javax.swing.JTextField();
        txtOpening_INV = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtIn_INV = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        txtOut_INV = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        txtEnd_INV = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        txtValue_INV = new javax.swing.JTextField();
        btnAdd_INV = new javax.swing.JButton();
        btnUpdate_INV = new javax.swing.JButton();
        btnDelete_INV = new javax.swing.JButton();
        cboINVperiod_INV = new javax.swing.JComboBox<>();
        cboProductName_INV = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        cboPeriod_PL = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnSearch_PL = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalesRevenue_PL = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTotalSalesRevenue_PL = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCOGS_PL = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTotalCOGS_PL = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtGrossProfitLoss_PL = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblOpExpend_PL = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtTotalOperationalExpenditure_PL = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtNetProfitLoss_PL = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        cboPeriod_BS = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btnSearch_BS = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblLiability_BS = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        txtTotalLiability_BS = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblAsset_BS = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        txtTotalAsset_BS = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblCapital_BS = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        txtTotalCapital_BS = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        txtTotalCapitalnLiability_BS = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuRefresh = new javax.swing.JMenuItem();
        menuLogOut = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AMA | v.1");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setSize(getPreferredSize());
        getContentPane().setLayout(null);

        tab.setBackground(new java.awt.Color(30, 48, 78));
        tab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tab.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        tab.setPreferredSize(new java.awt.Dimension(1000, 600));
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMouseClicked(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(32, 47, 78));

        jPanel20.setBackground(new java.awt.Color(32, 47, 78));
        jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Chart NUMBER");
        jPanel20.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 140, 20));

        jLabel35.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("DATE");
        jPanel20.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, -1, 30));

        txtChartName_Journal.setEditable(false);
        jPanel20.add(txtChartName_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 210, 30));

        jLabel39.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Description");
        jPanel20.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, -1, -1));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA JOURNAL.png"))); // NOI18N
        jPanel20.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -10, 560, 70));

        txtChartNumber_Journal.setEditable(false);
        txtChartNumber_Journal.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jPanel20.add(txtChartNumber_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 150, 40));

        txtDesc_Journal.setColumns(20);
        txtDesc_Journal.setRows(5);
        txtDesc_Journal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtDesc_JournalMouseEntered(evt);
            }
        });
        jScrollPane9.setViewportView(txtDesc_Journal);

        jPanel20.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 270, 130));

        btnView_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/View Journal.png"))); // NOI18N
        btnView_Journal.setText("jButton6");
        btnView_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnView_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 290, 200, 80));

        btnAddNew_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA - ADD NEW.png"))); // NOI18N
        btnAddNew_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNew_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnAddNew_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 120, 210, 70));

        btnSaveData_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Save File.png"))); // NOI18N
        btnSaveData_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveData_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnSaveData_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 200, 200, 80));

        btnUpdate_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA - UPDATE 1.png"))); // NOI18N
        btnUpdate_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnUpdate_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 120, 200, 70));

        btnSearch_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/OK.png"))); // NOI18N
        btnSearch_Journal.setMaximumSize(new java.awt.Dimension(25, 12));
        btnSearch_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnSearch_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 50, 40));

        dateChooser.setDateFormatString("yyyy-MM-dd");
        dateChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateChooserKeyReleased(evt);
            }
        });
        jPanel20.add(dateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 270, 30));

        txtJID_Journal.setEditable(false);
        txtJID_Journal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtJID_Journal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtJID_Journal.setText("JID");
        jPanel20.add(txtJID_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 210, 40));

        btnDelete_Journal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/delete-button.gif"))); // NOI18N
        btnDelete_Journal.setContentAreaFilled(false);
        btnDelete_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_JournalActionPerformed(evt);
            }
        });
        jPanel20.add(btnDelete_Journal, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, 210, 170));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        txtCredit_Journal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCredit_JournalKeyReleased(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel38.setText("Credit");

        jLabel37.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel37.setText("Debit");

        txtDebit_Journal.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                txtDebit_JournalComponentAdded(evt);
            }
        });
        txtDebit_Journal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDebit_JournalFocusGained(evt);
            }
        });
        txtDebit_Journal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDebit_JournalActionPerformed(evt);
            }
        });
        txtDebit_Journal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDebit_JournalPropertyChange(evt);
            }
        });
        txtDebit_Journal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDebit_JournalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDebit_JournalKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel37)
                .addGap(18, 18, 18)
                .addComponent(txtDebit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addGap(30, 30, 30)
                .addComponent(txtCredit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCredit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDebit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel20.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 770, 50));

        jLabel47.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Chart Name");
        jPanel20.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Status");
        jPanel20.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 20, 80, -1));

        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel20.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, -1, -1));

        txtStatus.setEditable(false);
        txtStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtStatus.setForeground(new java.awt.Color(255, 255, 255));
        txtStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });
        jPanel20.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 20, 160, 30));

        lblError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setText("Error Text appears here.");
        jPanel20.add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 87, 230, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/arrow_refresh.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel20.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 20, -1, -1));

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel20.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 70, 160, -1));

        jPanel22.setBackground(new java.awt.Color(32, 47, 78));
        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblJournalMaker.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "JID", "Chart No", "Chart Name", "Debit", "Credit", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblJournalMaker);

        txtTotalDebit_Journal.setEditable(false);

        txtTotalCredit_Journal.setEditable(false);

        jLabel48.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("CREDIT");

        jLabel50.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Debit");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotalDebit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalCredit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane10)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalCredit_Journal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotalDebit_Journal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, 1311, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tab.addTab("Journal", jPanel7);

        jPanel6.setBackground(new java.awt.Color(32, 47, 78));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setPreferredSize(new java.awt.Dimension(1380, 715));

        cboChart_GL.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboChart_GL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chart Name" }));
        cboChart_GL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChart_GLActionPerformed(evt);
            }
        });

        tblGL.setFont(new java.awt.Font("Lucida Sans", 0, 18)); // NOI18N
        tblGL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "JID", "Description", "Debit", "Credit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblGL);
        if (tblGL.getColumnModel().getColumnCount() > 0) {
            tblGL.getColumnModel().getColumn(0).setResizable(false);
            tblGL.getColumnModel().getColumn(1).setResizable(false);
            tblGL.getColumnModel().getColumn(2).setResizable(false);
            tblGL.getColumnModel().getColumn(3).setResizable(false);
            tblGL.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel9.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Debit");

        txtTDebit_GL.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Credit");

        txtTCredit_GL.setEditable(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Balance");

        txtBalance_GL.setEditable(false);

        jLabel32.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Sort by");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA GL.png"))); // NOI18N

        btnSave_GL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/gif-icons-menu-transition-animations-download.gif"))); // NOI18N
        btnSave_GL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave_GLActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Save");

        btnSearch_GL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/OK2.png"))); // NOI18N
        btnSearch_GL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch_GLActionPerformed(evt);
            }
        });

        cboPeriod_GL.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboPeriod_GL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Period" }));
        cboPeriod_GL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPeriod_GLActionPerformed(evt);
            }
        });

        lblRefresh_GL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/arrow_refresh.png"))); // NOI18N
        lblRefresh_GL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefresh_GLMouseClicked(evt);
            }
        });

        txtStatus_GL.setEditable(false);
        txtStatus_GL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtStatus_GL.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel49.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("STATUS");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cboChart_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cboPeriod_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                .addComponent(btnSearch_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStatus_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addGap(18, 18, 18)
                                .addComponent(lblRefresh_GL))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTCredit_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTDebit_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBalance_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnSave_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblRefresh_GL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboChart_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboPeriod_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtStatus_GL)))
                    .addComponent(btnSearch_GL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTDebit_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTCredit_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBalance_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnSave_GL, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(100, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1331, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
        );

        tab.addTab("GL", jPanel2);

        jPanel8.setBackground(new java.awt.Color(32, 47, 78));

        jPanel23.setBackground(new java.awt.Color(32, 47, 78));
        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel44.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Sort by");

        jLabel45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA TRIAL BALANCE.png"))); // NOI18N

        tblTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chart No.", "Chart Name", "Opening", "Debit", "Credit", "Closing"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblTB);
        if (tblTB.getColumnModel().getColumnCount() > 0) {
            tblTB.getColumnModel().getColumn(0).setResizable(false);
            tblTB.getColumnModel().getColumn(1).setResizable(false);
            tblTB.getColumnModel().getColumn(2).setResizable(false);
            tblTB.getColumnModel().getColumn(3).setResizable(false);
            tblTB.getColumnModel().getColumn(4).setResizable(false);
            tblTB.getColumnModel().getColumn(5).setResizable(false);
        }

        cboPeriod_TB.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboPeriod_TB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cboPeriod_TB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboPeriod_TBMouseClicked(evt);
            }
        });

        btnSearch_TB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Search Engine.png"))); // NOI18N
        btnSearch_TB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch_TBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addGap(0, 228, Short.MAX_VALUE))
                            .addComponent(cboPeriod_TB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch_TB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addContainerGap(27, Short.MAX_VALUE)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboPeriod_TB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch_TB, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tab.addTab("Trial Balance", jPanel8);

        jPanel11.setBackground(new java.awt.Color(32, 47, 78));

        jPanel3.setBackground(new java.awt.Color(32, 47, 78));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quick Add", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel64.setFont(new java.awt.Font("Orator Std", 0, 27)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Product ID");

        txtPID_INV.setEditable(false);
        txtPID_INV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPID_INV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPID_INV.setText("AUTOGENERATED");

        jLabel65.setFont(new java.awt.Font("Orator Std", 0, 27)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("PRODUCT NAME");

        btnAddProduct_INV.setBackground(new java.awt.Color(255, 255, 255));
        btnAddProduct_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA - ADD NEW.png"))); // NOI18N
        btnAddProduct_INV.setText("Add");
        btnAddProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProduct_INVActionPerformed(evt);
            }
        });

        lblRefreshProduct_GL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/arrow_refresh.png"))); // NOI18N
        lblRefreshProduct_GL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshProduct_GLMouseClicked(evt);
            }
        });

        btnLaunchSearcher.setText("...");
        btnLaunchSearcher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaunchSearcherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPID_INV, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(txtPName_INV)
                            .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddProduct_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(btnLaunchSearcher))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblRefreshProduct_GL)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblRefreshProduct_GL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPID_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPName_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddProduct_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLaunchSearcher)
                .addContainerGap())
        );

        jPanel15.setBackground(new java.awt.Color(32, 47, 78));
        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setLayout(null);

        tblBuyProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRID", "Date", "Qty", "Price", "Sub Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tblBuyProduct);

        jPanel15.add(jScrollPane7);
        jScrollPane7.setBounds(460, 70, 430, 240);

        cboSorterBuyProduct_INV.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        cboSorterBuyProduct_INV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product Name.." }));
        cboSorterBuyProduct_INV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboSorterBuyProduct_INVMouseClicked(evt);
            }
        });
        cboSorterBuyProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSorterBuyProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(cboSorterBuyProduct_INV);
        cboSorterBuyProduct_INV.setBounds(460, 30, 180, 30);
        jPanel15.add(txtPrice_INV);
        txtPrice_INV.setBounds(220, 150, 220, 30);

        btnNewBuyProduct_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/+ Icon.png"))); // NOI18N
        btnNewBuyProduct_INV.setEnabled(false);
        btnNewBuyProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewBuyProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(btnNewBuyProduct_INV);
        btnNewBuyProduct_INV.setBounds(20, 260, 60, 50);

        jLabel58.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("TR-ID");
        jPanel15.add(jLabel58);
        jLabel58.setBounds(10, 30, 80, 37);

        btnUpdateBuyProduct_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/UPDATE ICON.png"))); // NOI18N
        btnUpdateBuyProduct_INV.setEnabled(false);
        btnUpdateBuyProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBuyProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(btnUpdateBuyProduct_INV);
        btnUpdateBuyProduct_INV.setBounds(90, 260, 60, 50);

        btnSearchBuyProduct_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/mini search.png"))); // NOI18N
        btnSearchBuyProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBuyProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(btnSearchBuyProduct_INV);
        btnSearchBuyProduct_INV.setBounds(670, 10, 120, 50);

        jLabel57.setFont(new java.awt.Font("Orator Std", 0, 27)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("Sort by");
        jPanel15.add(jLabel57);
        jLabel57.setBounds(460, 0, 154, 37);

        jLabel59.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setText("Quantity");
        jPanel15.add(jLabel59);
        jLabel59.setBounds(10, 110, 154, 37);

        jLabel62.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(255, 255, 255));
        jLabel62.setText("Product");
        jPanel15.add(jLabel62);
        jLabel62.setBounds(10, 70, 170, 37);
        jPanel15.add(dtcProductAdded_INV);
        dtcProductAdded_INV.setBounds(300, 30, 140, 30);

        btnDeleteBuyProduct_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/47-512.png"))); // NOI18N
        btnDeleteBuyProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBuyProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(btnDeleteBuyProduct_INV);
        btnDeleteBuyProduct_INV.setBounds(160, 260, 60, 50);
        jPanel15.add(spiQty_INV);
        spiQty_INV.setBounds(220, 110, 220, 30);

        jLabel63.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("SUB TOTAL");
        jPanel15.add(jLabel63);
        jLabel63.setBounds(10, 200, 180, 37);

        txtSubTotal_INV.setEditable(false);
        jPanel15.add(txtSubTotal_INV);
        txtSubTotal_INV.setBounds(220, 190, 170, 50);

        lblRefreshTransactionProduct_GL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/arrow_refresh.png"))); // NOI18N
        lblRefreshTransactionProduct_GL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshTransactionProduct_GLMouseClicked(evt);
            }
        });
        jPanel15.add(lblRefreshTransactionProduct_GL);
        lblRefreshTransactionProduct_GL.setBounds(830, 20, 32, 32);

        txtAvg_INV.setEditable(false);
        jPanel15.add(txtAvg_INV);
        txtAvg_INV.setBounds(570, 320, 220, 30);

        jLabel66.setFont(new java.awt.Font("Orator Std", 0, 23)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("Average");
        jPanel15.add(jLabel66);
        jLabel66.setBounds(460, 320, 112, 37);

        jLabel67.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("Price");
        jPanel15.add(jLabel67);
        jLabel67.setBounds(10, 140, 130, 37);

        btnProcess_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/calculator.png"))); // NOI18N
        btnProcess_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcess_INVActionPerformed(evt);
            }
        });
        jPanel15.add(btnProcess_INV);
        btnProcess_INV.setBounds(400, 190, 50, 50);

        txtTRID.setEditable(false);
        jPanel15.add(txtTRID);
        txtTRID.setBounds(90, 30, 130, 30);

        jLabel75.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText("DATE");
        jPanel15.add(jLabel75);
        jLabel75.setBounds(220, 30, 70, 37);

        cboProduct_INV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product Name" }));
        cboProduct_INV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboProduct_INVMouseClicked(evt);
            }
        });
        cboProduct_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProduct_INVActionPerformed(evt);
            }
        });
        jPanel15.add(cboProduct_INV);
        cboProduct_INV.setBounds(220, 70, 220, 30);

        jPanel14.setBackground(new java.awt.Color(32, 47, 78));
        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField15.setEditable(false);

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA INVENTORY.png"))); // NOI18N

        jLabel54.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("TOTAL");

        tblInventory_INV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Opening", "In", "Value", "Out", "Value", "Ending", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblInventory_INV);

        lblRefreshInventory_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/arrow_refresh.png"))); // NOI18N
        lblRefreshInventory_INV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshInventory_INVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblRefreshInventory_INVMouseEntered(evt);
            }
        });

        jLabel56.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("ID");

        txtID_INV.setEditable(false);
        txtID_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtID_INVActionPerformed(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("NAME");

        jLabel69.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("PRICE");

        txtProductPrice_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductPrice_INVActionPerformed(evt);
            }
        });

        txtOpening_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpening_INVActionPerformed(evt);
            }
        });

        jLabel70.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("OPEN");

        jLabel71.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("IN");

        txtIn_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIn_INVActionPerformed(evt);
            }
        });

        jLabel72.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("OUT");

        txtOut_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOut_INVActionPerformed(evt);
            }
        });

        jLabel73.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(255, 255, 255));
        jLabel73.setText("END");

        txtEnd_INV.setEditable(false);
        txtEnd_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnd_INVActionPerformed(evt);
            }
        });

        jLabel74.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("VALUE");

        txtValue_INV.setEditable(false);
        txtValue_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValue_INVActionPerformed(evt);
            }
        });

        btnAdd_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/+ Icon.png"))); // NOI18N
        btnAdd_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_INVActionPerformed(evt);
            }
        });

        btnUpdate_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/UPDATE ICON.png"))); // NOI18N
        btnUpdate_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_INVActionPerformed(evt);
            }
        });

        btnDelete_INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/47-512.png"))); // NOI18N
        btnDelete_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_INVActionPerformed(evt);
            }
        });

        cboINVperiod_INV.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboINVperiod_INV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Period.." }));
        cboINVperiod_INV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboINVperiod_INVMouseClicked(evt);
            }
        });

        cboProductName_INV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product Name.." }));
        cboProductName_INV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboProductName_INVMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cboProductName_INVMouseReleased(evt);
            }
        });
        cboProductName_INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProductName_INVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(546, 546, 546)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRefreshInventory_INV)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(btnAdd_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboProductName_INV, 0, 176, Short.MAX_VALUE)
                                            .addComponent(txtID_INV)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtProductPrice_INV))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtOpening_INV)))
                                .addGap(30, 30, 30)))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtValue_INV, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(txtIn_INV, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtEnd_INV, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtOut_INV, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(cboINVperiod_INV, 0, 193, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboINVperiod_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtID_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(txtIn_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtOut_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEnd_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtValue_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboProductName_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductPrice_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtOpening_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAdd_INV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnDelete_INV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblRefreshInventory_INV)
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(85, 85, 85)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );

        tab.addTab("Inventory", jPanel11);

        jPanel12.setBackground(new java.awt.Color(32, 47, 78));

        jPanel16.setBackground(new java.awt.Color(32, 47, 78));
        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA PROFIT LOSS.png"))); // NOI18N

        cboPeriod_PL.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboPeriod_PL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel3.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SORT BY");

        btnSearch_PL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Search Engine.png"))); // NOI18N

        tblSalesRevenue_PL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSalesRevenue_PL);
        if (tblSalesRevenue_PL.getColumnModel().getColumnCount() > 0) {
            tblSalesRevenue_PL.getColumnModel().getColumn(0).setResizable(false);
            tblSalesRevenue_PL.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel2.setText("Total Sales Revenue");

        jLabel4.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel4.setText("Sales Revenue");

        txtTotalSalesRevenue_PL.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(txtTotalSalesRevenue_PL)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTotalSalesRevenue_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblCOGS_PL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCOGS_PL);
        if (tblCOGS_PL.getColumnModel().getColumnCount() > 0) {
            tblCOGS_PL.getColumnModel().getColumn(0).setResizable(false);
            tblCOGS_PL.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel5.setText("Total COGS");

        jLabel6.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel6.setText("Cost Of Good Sold");

        txtTotalCOGS_PL.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(txtTotalCOGS_PL)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalCOGS_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel7.setText("Gross Profit (Loss)");

        txtGrossProfitLoss_PL.setEditable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(39, 39, 39)
                    .addComponent(txtGrossProfitLoss_PL)
                    .addContainerGap()))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtGrossProfitLoss_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel8.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel8.setText("Operational Expenditure");

        tblOpExpend_PL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblOpExpend_PL);
        if (tblOpExpend_PL.getColumnModel().getColumnCount() > 0) {
            tblOpExpend_PL.getColumnModel().getColumn(0).setResizable(false);
            tblOpExpend_PL.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel12.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel12.setText("Total Operational Expenditure");

        txtTotalOperationalExpenditure_PL.setEditable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(txtTotalOperationalExpenditure_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalOperationalExpenditure_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel14.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel14.setText("Net Profit (Loss)");

        txtNetProfitLoss_PL.setEditable(false);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtNetProfitLoss_PL))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNetProfitLoss_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboPeriod_PL, 0, 229, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSearch_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cboPeriod_PL, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.addTab("Profit-Loss", jPanel12);

        jPanel17.setBackground(new java.awt.Color(32, 47, 78));

        jPanel19.setBackground(new java.awt.Color(32, 47, 78));
        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA BALANCE SHEET.png"))); // NOI18N

        cboPeriod_BS.setFont(new java.awt.Font("Lucida Console", 0, 18)); // NOI18N
        cboPeriod_BS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel11.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("SORT BY");

        btnSearch_BS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Search Engine.png"))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel25.setText("Liability");

        tblLiability_BS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tblLiability_BS);
        if (tblLiability_BS.getColumnModel().getColumnCount() > 0) {
            tblLiability_BS.getColumnModel().getColumn(0).setResizable(false);
            tblLiability_BS.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel26.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel26.setText("Total Liability");

        txtTotalLiability_BS.setEditable(false);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtTotalLiability_BS)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalLiability_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel27.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel27.setText("Asset");

        tblAsset_BS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tblAsset_BS);
        if (tblAsset_BS.getColumnModel().getColumnCount() > 0) {
            tblAsset_BS.getColumnModel().getColumn(0).setResizable(false);
            tblAsset_BS.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel28.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel28.setText("Total Asset");

        txtTotalAsset_BS.setEditable(false);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel24Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtTotalAsset_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalAsset_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel29.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 36)); // NOI18N
        jLabel29.setText("Capital");

        tblCapital_BS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Chart Name", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tblCapital_BS);
        if (tblCapital_BS.getColumnModel().getColumnCount() > 0) {
            tblCapital_BS.getColumnModel().getColumn(0).setResizable(false);
            tblCapital_BS.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel30.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 18)); // NOI18N
        jLabel30.setText("Total Capital");

        txtTotalCapital_BS.setEditable(false);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtTotalCapital_BS)))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalCapital_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel40.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 24)); // NOI18N
        jLabel40.setText("Total Liability & Capital");

        txtTotalCapitalnLiability_BS.setEditable(false);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalCapitalnLiability_BS)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalCapitalnLiability_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboPeriod_BS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSearch_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel19Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cboPeriod_BS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1331, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.addTab("Balance Sheet", jPanel13);

        getContentPane().add(tab);
        tab.setBounds(-20, 0, 1420, 760);

        jLabel19.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel19.setText("KEY");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(710, 140, 100, 30);

        jLabel20.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel20.setText("TO SUCCESS");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(650, 170, 160, 30);

        jLabel23.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel23.setText("ANYONE ELSE");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(650, 230, 270, 30);

        jLabel22.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel22.setText("IS TO START BEFORE");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(650, 200, 270, 30);

        jLabel21.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel21.setText("THE");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(650, 140, 100, 30);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/333333.png"))); // NOI18N
        getContentPane().add(jLabel33);
        jLabel33.setBounds(1060, 0, 420, 60);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/33.png"))); // NOI18N
        getContentPane().add(jLabel17);
        jLabel17.setBounds(1060, 60, 420, 740);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/AMA - Boarder.png"))); // NOI18N
        jLabel15.setText("jLabel15");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(30, 0, 1060, 290);

        jMenu1.setText("Menu");

        menuRefresh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/database_refresh.png"))); // NOI18N
        menuRefresh.setText("Refresh");
        menuRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRefreshActionPerformed(evt);
            }
        });
        jMenu1.add(menuRefresh);

        menuLogOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/door_out.png"))); // NOI18N
        menuLogOut.setText("Log Out");
        menuLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogOutActionPerformed(evt);
            }
        });
        jMenu1.add(menuLogOut);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/information.png"))); // NOI18N
        jMenuItem3.setText("About");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSave_GLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave_GLActionPerformed
        if ((!txtTDebit_GL.getText().trim().isEmpty() && !txtTCredit_GL.getText().trim().isEmpty()) && !txtBalance_GL.getText().trim().isEmpty()) {
            executeSaveGL();
            executeRefresh_GL();

        } else {
            Sutil.msg(this, "No data to be saved.");
        }


    }//GEN-LAST:event_btnSave_GLActionPerformed

    private void cboChart_GLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChart_GLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboChart_GLActionPerformed

    private Double debit_journal;
    private Double credit_journal;
    private int datestatus = 0;

    private void btnAddNew_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNew_JournalActionPerformed

        try {

            try {
                Date datetester = dateChooser.getDate();
                if (datetester != null) {
                    datestatus = 1;
                } else {
                    datestatus = 0;
                    dateChooser.grabFocus();
                }
            } catch (NullPointerException ex) {
                datestatus = 0;

            }
            if (((!txtCredit_Journal.getText().trim().isEmpty()) && (!txtDebit_Journal.getText().trim().isEmpty())) || txtChartName_Journal.getText().trim().isEmpty() || txtChartNumber_Journal.getText().trim().isEmpty() || txtDesc_Journal.getText().trim().isEmpty() || (txtCredit_Journal.getText().trim().isEmpty() && txtDebit_Journal.getText().trim().isEmpty()) || datestatus != 1) {
                Sutil.msg(this, "Some field is still empty or mistaken.");

            } else {

                if (txtDebit_Journal.getText().trim().isEmpty()) {
                    debit_journal = 0.0;
                    credit_journal = Double.valueOf(txtCredit_Journal.getText());
                } else if (txtCredit_Journal.getText().trim().isEmpty()) {
                    credit_journal = 0.0;
                    debit_journal = Double.valueOf(txtDebit_Journal.getText());
                }

                executeNewData();
                executeSaveTemporaryJournal();
                generateTotal();
                removeTableData();
                loadJournal_Temporary();
                txtChartNumber_Journal.requestFocusInWindow();// pas add new selesai, lgsg fokus ke txtfield chart number
            }
        } catch (NullPointerException ex) {
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnAddNew_JournalActionPerformed

    private void btnSearch_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch_JournalActionPerformed
        ChartSearch cs1 = new ChartSearch(this, true, conn, "A");
        cs1.setVisible(true);
        dateChooser.requestFocusInWindow();
    }//GEN-LAST:event_btnSearch_JournalActionPerformed

    private void btnSaveData_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveData_JournalActionPerformed
        if (txtTotalDebit_Journal.getText().equals(txtTotalCredit_Journal.getText())) {
            if (tblJournalMaker.getRowCount() <= 0) {
                Sutil.msg(this, "No data to be saved.");
            } else {
                int x = Sutil.msq(this, "Are you sure?");
                if (x == 0) {
                    try {
                        executeSaveJournal();
                        Sutil.msg(this, "Your data has been saved. Temporary journal will be deleted.");
                        executeNew();
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    removeTableData();
                    txtJID_Journal.setText("JID");
                } else {
                }
            }
        } else {
            Sutil.msg(this, "Unbalanced Debit and Credit Amount");
        }
    }//GEN-LAST:event_btnSaveData_JournalActionPerformed

    private void btnUpdate_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_JournalActionPerformed
        try {
            if (tblJournalMaker.getSelectedRow() == -1) {
                Sutil.msg(this, "No data is selected.");
            } else {
                executeUpdate();
                removeTableData();
                loadJournal_Temporary();
            }
        } catch (ParseException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdate_JournalActionPerformed

    private void btnView_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView_JournalActionPerformed
        FrmJournalViewer JV = new FrmJournalViewer(conn);
        JV.setVisible(true);
    }//GEN-LAST:event_btnView_JournalActionPerformed

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked

    }//GEN-LAST:event_jLabel24MouseClicked

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusActionPerformed

    private void menuLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogOutActionPerformed
        dispose();

    }//GEN-LAST:event_menuLogOutActionPerformed

    private void cboPeriod_GLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPeriod_GLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPeriod_GLActionPerformed

    private void txtDebit_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDebit_JournalActionPerformed

    }//GEN-LAST:event_txtDebit_JournalActionPerformed

    private void txtDebit_JournalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDebit_JournalKeyTyped

    }//GEN-LAST:event_txtDebit_JournalKeyTyped

    private void txtDebit_JournalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDebit_JournalPropertyChange

    }//GEN-LAST:event_txtDebit_JournalPropertyChange

    private void txtDebit_JournalComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_txtDebit_JournalComponentAdded

    }//GEN-LAST:event_txtDebit_JournalComponentAdded

    private void txtDebit_JournalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDebit_JournalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDebit_JournalFocusGained

    private void txtDebit_JournalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDebit_JournalKeyReleased

        if ((txtDebit_Journal.getText().trim().matches(".*[a-zA-Z]+.*")) == true) {
            lblError.setVisible(true);
            lblError.setText("Please input with number only.");
            txtDebit_Journal.setForeground(red);
        } else {

            if ((!txtDebit_Journal.getText().isEmpty()) && Double.valueOf(txtDebit_Journal.getText().trim()) > 0) {

                txtCredit_Journal.setEnabled(false);
                lblError.setVisible(false);
                txtDebit_Journal.setForeground(black);

            } else {
                lblError.setVisible(false);
                txtCredit_Journal.setEnabled(true);
                txtDebit_Journal.setForeground(black);
            }
        }
    }//GEN-LAST:event_txtDebit_JournalKeyReleased

    private void txtCredit_JournalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCredit_JournalKeyReleased
        if ((txtCredit_Journal.getText().trim().matches(".*[a-zA-Z]+.*")) == true) {
            lblError.setVisible(true);
            lblError.setText("Please input with number only.");
            txtCredit_Journal.setForeground(red);
        } else {

            if ((!txtCredit_Journal.getText().isEmpty()) && Double.valueOf(txtCredit_Journal.getText().trim()) > 0) {
                txtDebit_Journal.setEnabled(false);

                lblError.setVisible(false);
                txtCredit_Journal.setForeground(black);

            } else {
                lblError.setVisible(false);
                txtDebit_Journal.setEnabled(true);
                txtCredit_Journal.setForeground(black);
            }
        }
    }//GEN-LAST:event_txtCredit_JournalKeyReleased

    private void btnDelete_JournalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_JournalActionPerformed
        if (tblJournalMaker.getSelectedRow() == -1) {
            Sutil.msg(this, "No data is selected.");
        } else {
            executeDelete();
            removeTableData();
            loadJournal_Temporary();
        }
    }//GEN-LAST:event_btnDelete_JournalActionPerformed

    private void dateChooserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateChooserKeyReleased
        txtDesc_Journal.requestFocusInWindow();
    }//GEN-LAST:event_dateChooserKeyReleased

    private void txtDesc_JournalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDesc_JournalMouseEntered
        txtDebit_Journal.requestFocusInWindow();
    }//GEN-LAST:event_txtDesc_JournalMouseEntered

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        removeTableData();
        executeRefresh();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
        try {
            deletePreviousData();
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMouseClicked


    }//GEN-LAST:event_tabMouseClicked

    private void btnSearch_GLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch_GLActionPerformed
        try {
            removeTableData_GL();
            loadGL_GL();
            generateTotalGL();
            checkUpdatesGL();
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearch_GLActionPerformed

    private void lblRefresh_GLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefresh_GLMouseClicked
        executeRefresh_GL();
        comboPeriod_GL();
        comboChart_GL();
    }//GEN-LAST:event_lblRefresh_GLMouseClicked

    private void btnAddProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProduct_INVActionPerformed
        if (!txtPID_INV.getText().trim().isEmpty() && !txtPName_INV.getText().isEmpty()) {
            executeAddProduct();
            txtPID_INV.setText("AUTOGENERATED");
            txtPName_INV.setText("");
            btnAddProduct_INV.setEnabled(true);
        } else {
            Sutil.msg(this, "Some field is still empty.");
        }
    }//GEN-LAST:event_btnAddProduct_INVActionPerformed

    private void lblRefreshProduct_GLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshProduct_GLMouseClicked
        txtPID_INV.setText("AUTOGENERATED");
        txtPName_INV.setText("");
        btnAddProduct_INV.setEnabled(true);
    }//GEN-LAST:event_lblRefreshProduct_GLMouseClicked
    private Double avg_inv;
    private void cboPeriod_TBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboPeriod_TBMouseClicked
        comboPeriod_TB();
    }//GEN-LAST:event_cboPeriod_TBMouseClicked

    private void btnSearch_TBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch_TBActionPerformed
        removeTableData_TB();
        loadTB_TB();
//            generateTotalGL();
//            checkUpdatesGL();
    }//GEN-LAST:event_btnSearch_TBActionPerformed

    private void cboSorterBuyProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSorterBuyProduct_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSorterBuyProduct_INVActionPerformed

    private void btnNewBuyProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewBuyProduct_INVActionPerformed
        if (spiQty_INV.getValue().equals(0) || txtPrice_INV.getText().trim().isEmpty() || txtSubTotal_INV.getText().trim().isEmpty()) {
            Sutil.msg(this, "Some field is still empty.");

        } else {
            executeInsertBuyProduct();
            cboSorterBuyProduct_INV.setSelectedItem(selectedbuyproduct);
            spiQty_INV.setValue(0);
            txtPrice_INV.setText("");
            txtTRID.setText("");
            txtSubTotal_INV.setText("");
            removeTableData_BuyProduct();
            loadSpecificBuyProduct();
            generateAvg();
            btnAddProduct_INV.setEnabled(false);
        }
    }//GEN-LAST:event_btnNewBuyProduct_INVActionPerformed

    private void btnUpdateBuyProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBuyProduct_INVActionPerformed
        if (tblBuyProduct.getRowCount() == 0) {
            Sutil.msg(this, "No data selected..");

        } else {
            executeUpdateBuyProduct();
            removeTableData_BuyProduct();
            cboSorterBuyProduct_INV.setSelectedItem(cboProduct_INV.getSelectedItem().toString());
            loadSpecificBuyProduct();
            executeRefreshBuyProduct();

        }
    }//GEN-LAST:event_btnUpdateBuyProduct_INVActionPerformed

    private void btnSearchBuyProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBuyProduct_INVActionPerformed
        removeTableData_BuyProduct();
        loadSpecificBuyProduct();
        generateAvg();
    }//GEN-LAST:event_btnSearchBuyProduct_INVActionPerformed

    private void btnDeleteBuyProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBuyProduct_INVActionPerformed
        if (Sutil.msq(this, "Do you want to delete this data?") == 0) {
            if (tblBuyProduct.getRowCount() > 0) {
                executeDeleteBuyProduct();
                removeTableData_BuyProduct();
                loadAllBuyProduct();
                executeRefreshBuyProduct();
            } else {
                Sutil.msg(this, "No data selected.");
            }
        } else {
        }
    }//GEN-LAST:event_btnDeleteBuyProduct_INVActionPerformed

    private void lblRefreshTransactionProduct_GLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshTransactionProduct_GLMouseClicked
        executeRefreshBuyProduct();
        btnSearchBuyProduct_INV.setEnabled(true);
        removeTableData_BuyProduct();
    }//GEN-LAST:event_lblRefreshTransactionProduct_GLMouseClicked

    private void btnProcess_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcess_INVActionPerformed
        if (!txtPrice_INV.getText().isEmpty() && !spiQty_INV.getValue().equals(0)) {
            Double total, price;
            int qty;

            price = Double.valueOf(txtPrice_INV.getText());
            qty = (Integer) spiQty_INV.getValue();
            total = price * qty;
            txtSubTotal_INV.setText(String.valueOf(total));
            btnNewBuyProduct_INV.setEnabled(true);
            btnUpdateBuyProduct_INV.setEnabled(true);
        } else {
            Sutil.msg(this, "Some field is still empty.");
        }
    }//GEN-LAST:event_btnProcess_INVActionPerformed

    private void cboProduct_INVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboProduct_INVMouseClicked
        comboProduct_INV();
    }//GEN-LAST:event_cboProduct_INVMouseClicked

    private void cboProduct_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProduct_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboProduct_INVActionPerformed

    private void lblRefreshInventory_INVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshInventory_INVMouseClicked
        removeTableData_INV();
        loadINV();
        refreshFormINV();
    }//GEN-LAST:event_lblRefreshInventory_INVMouseClicked

    private void lblRefreshInventory_INVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshInventory_INVMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblRefreshInventory_INVMouseEntered

    private void txtID_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtID_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtID_INVActionPerformed

    private void txtProductPrice_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductPrice_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductPrice_INVActionPerformed

    private void txtOpening_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpening_INVActionPerformed
        txtIn_INV.requestFocusInWindow();
    }//GEN-LAST:event_txtOpening_INVActionPerformed

    private void txtIn_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIn_INVActionPerformed
        txtOut_INV.requestFocusInWindow();
    }//GEN-LAST:event_txtIn_INVActionPerformed

    private void txtOut_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOut_INVActionPerformed

        int open = Integer.valueOf(txtOpening_INV.getText());
        int in = Integer.valueOf(txtIn_INV.getText());
        int out = Integer.valueOf(txtOut_INV.getText());
        int end = open + in - out;
        txtEnd_INV.setText(String.valueOf(end));
        double price = Double.valueOf(txtProductPrice_INV.getText());
        txtValue_INV.setText(String.valueOf(end * price));
    }//GEN-LAST:event_txtOut_INVActionPerformed

    private void txtEnd_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnd_INVActionPerformed
        int end = Integer.valueOf(txtEnd_INV.getText());
        double price = Double.valueOf(txtProductPrice_INV.getText());
        txtValue_INV.setText(String.valueOf(end * price));
    }//GEN-LAST:event_txtEnd_INVActionPerformed

    private void txtValue_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValue_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValue_INVActionPerformed
    private int datainv, maxdatainv;
    private void btnAdd_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_INVActionPerformed
        if (txtProductPrice_INV.getText().trim().isEmpty() || txtOpening_INV.getText().trim().isEmpty() || txtIn_INV.getText().trim().isEmpty() || txtOut_INV.getText().trim().isEmpty() || txtEnd_INV.getText().trim().isEmpty() || txtValue_INV.getText().trim().isEmpty()) {
            Sutil.msg(this, "Some field is still empty.");

        } else {
            checkDataINV();
            if (datainv > 0) {
                Sutil.msg(this, "Data exists.");
            } else {
                executeInsertINV();
                removeTableData_INV();
                loadINV();
            }

        }
    }//GEN-LAST:event_btnAdd_INVActionPerformed

    private void btnUpdate_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_INVActionPerformed
        if (txtID_INV.getText().trim().isEmpty() || txtProductPrice_INV.getText().trim().isEmpty() || txtOpening_INV.getText().trim().isEmpty() || txtIn_INV.getText().trim().isEmpty() || txtOut_INV.getText().trim().isEmpty() || txtEnd_INV.getText().trim().isEmpty() || txtValue_INV.getText().trim().isEmpty()) {
            Sutil.msg(this, "Some field is still empty.");

        } else {
            executeUpdateINV();
            removeTableData_INV();
            loadINV();
        }
    }//GEN-LAST:event_btnUpdate_INVActionPerformed

    private void cboINVperiod_INVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboINVperiod_INVMouseClicked
        comboPeriod_INV();
    }//GEN-LAST:event_cboINVperiod_INVMouseClicked

    private void cboProductName_INVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboProductName_INVMouseClicked
        comboAddINV_Product();
    }//GEN-LAST:event_cboProductName_INVMouseClicked

    private void btnDelete_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_INVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDelete_INVActionPerformed

    private void cboProductName_INVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboProductName_INVMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cboProductName_INVMouseReleased

    private void cboProductName_INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProductName_INVActionPerformed

        String product_inv = cboProductName_INV.getSelectedItem().toString();
        String product_bought = cboSorterBuyProduct_INV.getSelectedItem().toString();
        comboSorterBuyProduct_INV();
        cboSorterBuyProduct_INV.setSelectedItem(product_inv);
        removeTableData_BuyProduct();
        loadSpecificBuyProduct();
        try {
            String generateavgsql = "select sum(sub_total) as total, sum(qty) as qty from product_transaction where product_name=?;";
            PreparedStatement pstatement = conn.prepareStatement(generateavgsql);
            pstatement.setString(1, (String) cboSorterBuyProduct_INV.getSelectedItem());
            DefaultTableModel model = (DefaultTableModel) tblBuyProduct.getModel();
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                Double total = rs.getDouble("total");
                int qty = rs.getInt("qty");
                Double avg;
                avg = total / qty;
                txtAvg_INV.setText(String.valueOf(avg));

            }

            avg_inv = Double.valueOf(txtAvg_INV.getText());
            txtProductPrice_INV.setText(String.valueOf(avg_inv));

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }


    }//GEN-LAST:event_cboProductName_INVActionPerformed

    private void cboSorterBuyProduct_INVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboSorterBuyProduct_INVMouseClicked
        comboSorterBuyProduct_INV();
    }//GEN-LAST:event_cboSorterBuyProduct_INVMouseClicked

    private void btnLaunchSearcherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaunchSearcherActionPerformed
        ProductSearch ps = new ProductSearch(this, true, conn, id_inv);
        ps.setVisible(rootPaneCheckingEnabled);
        ps.txtSearch.requestFocusInWindow();
    }//GEN-LAST:event_btnLaunchSearcherActionPerformed

    private void menuRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRefreshActionPerformed
      refreshFormINV();
      executeRefresh();
      executeRefreshBuyProduct();
      executeRefresh_GL();
    }//GEN-LAST:event_menuRefreshActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
      FrmAbout ab = new FrmAbout(conn, "Admin");
      ab.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    // METHODS
    private void setElements() {
        lblError.setVisible(false);
        tableSelectionListener_JournalMaker();
        tblBuyProductSelectionListener();
        tblINVSelectionListener();
        comboPeriod_GL();
        comboChart_GL();
        comboProduct_INV();
        comboAddINV_Product();
        comboSorterBuyProduct_INV();
        comboPeriod_TB();
        comboPeriod_INV();

    }
    private Double total_debit = 0.0;
    private Double total_credit = 0.0;

    private void generateTotal() {
        try {
            String sql = "select sum(debit), sum(credit) from journal_temporary;";

            PreparedStatement pstatement = conn.prepareStatement(sql);
            ResultSet rs = pstatement.executeQuery();
            if (rs.isBeforeFirst()) { // check is resultset not empty

                while (rs.next()) {

                    txtTotalDebit_Journal.setText(String.valueOf(rs.getDouble("sum(debit)")));
                    txtTotalCredit_Journal.setText(String.valueOf(rs.getDouble("sum(credit)")));
                }
            } else {
                Sutil.msg(this, "Record empty.");
            }
            rs.close();
            pstatement.close();
        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void executeSaveJournal() throws SQLException {
        int rows = tblJournalMaker.getRowCount();

        for (int row = 0; row < rows; row++) {
            String saveSql = "INSERT INTO akuntansi.journal_detail"
                    + "(tgl,jid, jno,chart_no,chart_name,debit,credit,description)"
                    + "VALUES(?,?,?,?,?,?,?,?);";
            PreparedStatement pstatement = conn.prepareStatement(saveSql);

            String chartno = (String) tblJournalMaker.getValueAt(row, 2);
            String chartname = (String) tblJournalMaker.getValueAt(row, 3);
            Double debit = (Double) tblJournalMaker.getValueAt(row, 4);
            Double credit = (Double) tblJournalMaker.getValueAt(row, 5);
            String desc = (String) tblJournalMaker.getValueAt(row, 6);
            pstatement.setDate(1, convertUtilDateToSql(dateChooser.getDate()));
            pstatement.setString(2, txtJID_Journal.getText());
            pstatement.setInt(3, jno + 1);
            pstatement.setString(4, chartno);
            pstatement.setString(5, chartname);
            pstatement.setDouble(6, debit);
            pstatement.setDouble(7, credit);
            pstatement.setString(8, desc);
            pstatement.executeUpdate();
            pstatement.close();
            deletePreviousData();

        }

    }

    private void executeSaveTemporaryJournal() throws SQLException {
        String saveSql = "INSERT INTO akuntansi.journal_temporary"
                + "(tgl,jid, jno,chart_no,chart_name,debit,credit,description)"
                + "VALUES(?,?,?,?,?,?,?,?);";
        PreparedStatement pstatement = conn.prepareStatement(saveSql);
        String chartno = txtChartNumber_Journal.getText();
        String chartname = txtChartName_Journal.getText();
        String desc = txtDesc_Journal.getText();
        pstatement.setDate(1, (convertUtilDateToSql(dateChooser.getDate())));
        pstatement.setString(2, txtJID_Journal.getText());
        pstatement.setInt(3, jno + 1);
        pstatement.setString(4, chartno);
        pstatement.setString(5, chartname);
        pstatement.setDouble(6, debit_journal);
        pstatement.setDouble(7, credit_journal);
        pstatement.setString(8, desc);
        pstatement.executeUpdate();
        pstatement.close();

    }

    private void databaseConnection() {
        try {
            Class.forName(DbConn.JDBC_CLASS);
            conn = DriverManager.getConnection(DbConn.JDBC_URL,
                    DbConn.JDBC_USERNAME,
                    DbConn.JDBC_PASSWORD);

            if (conn != null) {
                txtStatus.setText("Connected");
                txtStatus.setBackground(green);
            } else {
                txtStatus.setText("Unconnected");
                txtStatus.setBackground(red);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            txtStatus.setBackground(red);
            String error = ex.getLocalizedMessage();
            if (error.contains("Unknown database")) {
                txtStatus.setText("Unknown database");
            } else if (error.contains("Access denied")) {
                txtStatus.setText("Access denied");
            }

        }
    }

    private void executeUpdate() throws ParseException {
        try {
            String debit_temporary = String.valueOf(tblJournalMaker.getValueAt(row, 4));
            String credit_temporary = String.valueOf(tblJournalMaker.getValueAt(row, 5));
            String chart_no_temporary = String.valueOf(tblJournalMaker.getValueAt(row, 2));
            String updateSql = "UPDATE akuntansi.journal_temporary SET "
                    + " tgl=?,chart_no=?,chart_name=?,debit=?,credit=?,description=? WHERE jid=? and chart_no=? and debit=? and credit=?";
            PreparedStatement pstatement = conn.prepareStatement(updateSql);
            pstatement.setObject(1, dateChooser.getDate());
            pstatement.setString(2, txtChartNumber_Journal.getText().trim());
            pstatement.setString(3, txtChartName_Journal.getText().trim());
            pstatement.setDouble(4, Double.valueOf(txtDebit_Journal.getText()));
            pstatement.setDouble(5, Double.valueOf(txtCredit_Journal.getText()));
            pstatement.setString(6, txtDesc_Journal.getText());
            pstatement.setString(7, txtJID_Journal.getText());
            pstatement.setString(8, chart_no_temporary);
            pstatement.setString(9, debit_temporary);
            pstatement.setString(10, credit_temporary);
            pstatement.executeUpdate();
            pstatement.close();

            executeNew();
            Sutil.msg(this, "Update successful.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private Object getDateChooser() throws ParseException {
        String dateStr;
        DateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        dateStr = f.format(dateChooser.getDate());

        return dateStr;
    }

    private void executeDelete() {
        try {
            String updateSql = "DELETE FROM akuntansi.journal_temporary WHERE jid = ? and chart_no=? and debit=? and credit=? and description=?";
            PreparedStatement pstatement = conn.prepareStatement(updateSql);
            pstatement.setString(1, txtJID_Journal.getText().trim());
            pstatement.setString(2, txtChartNumber_Journal.getText().trim());
            pstatement.setString(3, txtDebit_Journal.getText().trim());
            pstatement.setString(4, txtCredit_Journal.getText().trim());
            pstatement.setString(5, txtDesc_Journal.getText().trim());
            pstatement.executeUpdate();
            pstatement.close();
            executeNew();
            Sutil.msg(this, "Delete successful.");
            //load database journal_temporary
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadJournal_Temporary() {
        try {
            removeTableData();
            String sql = "SELECT * FROM akuntansi.journal_temporary";

            PreparedStatement pstatement = conn.prepareStatement(sql);
            ResultSet rs = pstatement.executeQuery();
            if (rs.isBeforeFirst()) { // check is resultset not empty
                DefaultTableModel tableModel = (DefaultTableModel) tblJournalMaker.getModel();
                while (rs.next()) {
                    Object data[] = {
                        rs.getDate("tgl"),
                        rs.getString("jid"),
                        rs.getString("chart_no"),
                        rs.getString("chart_name"),
                        rs.getDouble("debit"),
                        rs.getDouble("credit"),
                        rs.getString("description"),};
                    tableModel.addRow(data);
                }
            } else {
                Sutil.msg(this, "Record empty.");
            }
            rs.close();
            pstatement.close();
        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void removeTableData() {
        DefaultTableModel tableModel = (DefaultTableModel) tblJournalMaker.getModel();
        tableModel.setRowCount(0);
    }

    private void removeTableData_GL() {
        DefaultTableModel tableModel = (DefaultTableModel) tblGL.getModel();
        tableModel.setRowCount(0);
    }

    private void removeTableData_BuyProduct() {
        DefaultTableModel tableModel = (DefaultTableModel) tblBuyProduct.getModel();
        tableModel.setRowCount(0);
    }

    private void removeTableData_INV() {
        DefaultTableModel tableModel = (DefaultTableModel) tblInventory_INV.getModel();
        tableModel.setRowCount(0);
    }

    private void generateID() throws SQLException {

        //check if there is data
        String checksql = "SELECT count(jno) as counter FROM akuntansi.journal_detail";
        PreparedStatement pstatement1 = conn.prepareStatement(checksql);
        ResultSet rs1 = pstatement1.executeQuery();
        if (rs1.isBeforeFirst()) { // check is resultset not empty
            while (rs1.next()) {
                counter = rs1.getInt("counter");

            }
        } else {

        }
        rs1.close();
        pstatement1.close();

        if (counter == 0) {
            jno = 0;
        } else {
            String getsql = "SELECT max(jno) as max FROM akuntansi.journal_detail";
            PreparedStatement pstatement2 = conn.prepareStatement(getsql);
            ResultSet rs2 = pstatement2.executeQuery();
            if (rs2.isBeforeFirst()) { // check is resultset not empty
                while (rs2.next()) {
                    jno = rs2.getInt("max");

                }
            } else {

            }
            rs2.close();
            pstatement2.close();
        }
        JID_Journal = "J-" + String.format("%03d", jno + 1);
        txtJID_Journal.setText(JID_Journal);
    }

    private void executeNew() {
        txtChartNumber_Journal.setText("");
        txtChartName_Journal.setText("");
        txtDebit_Journal.setText("");
        txtCredit_Journal.setText("");
        txtTotalCredit_Journal.setText("");
        txtTotalDebit_Journal.setText("");
        txtDebit_Journal.setEnabled(true);
        txtCredit_Journal.setEnabled(true);
    }

    private void executeNewData() throws SQLException, ParseException {
        if (txtJID_Journal.getText().trim().equals("JID")) {
            generateID();
        } else {
        }

        int x = 0;

        Object data[] = {dateChooser.getDate(), txtJID_Journal.getText(),
            txtChartNumber_Journal.getText().trim(),
            txtChartName_Journal.getText(),
            debit_journal,
            credit_journal,
            txtDesc_Journal.getText(),};
        DefaultTableModel tableModel = (DefaultTableModel) tblJournalMaker.getModel();
        tableModel.addRow(data);
        x++;

    }

    private void tableSelectionListener_JournalMaker() {
        ListSelectionListener listener;
        listener = new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                row = tblJournalMaker.getSelectedRow();

                if (row >= 0) {

                    try {
                        getDateChooser();
                    } catch (ParseException ex) {
                        Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String debit_journal = String.valueOf(tblJournalMaker.getValueAt(row, 4));
                    String credit_journal = String.valueOf(tblJournalMaker.getValueAt(row, 5));

                    dateChooser.setDate((Date) tblJournalMaker.getValueAt(row, 0));
                    txtJID_Journal.setText(tblJournalMaker.getValueAt(row, 1).toString());
                    txtChartNumber_Journal.setText(tblJournalMaker.getValueAt(row, 2).toString());
                    txtChartName_Journal.setText(tblJournalMaker.getValueAt(row, 3).toString());
                    txtDebit_Journal.setText(debit_journal);
                    txtCredit_Journal.setText(credit_journal);
                    if (Double.valueOf(debit_journal) > Double.valueOf(credit_journal)) {
                        txtCredit_Journal.setEnabled(false);
                        txtDebit_Journal.setEnabled(true);
                    } else {
                        txtCredit_Journal.setEnabled(true);
                        txtDebit_Journal.setEnabled(false);
                    }
                    txtDesc_Journal.setText(String.valueOf(tblJournalMaker.getValueAt(row, 6)));
                }
            }
        };
        tblJournalMaker.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblJournalMaker.getSelectionModel().addListSelectionListener(listener);
    }

    /**
     *
     * @param date
     * @return
     */
    public static java.sql.Date convertUtilDateToSql(java.util.Date date) {
        if (date != null) {
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            return sqlDate;
        }
        return null;
    }

    private String year_sql_gl;
    private int month_sql_gl;

    private void comboPeriod_GL() {

        try {
            if (conn != null) {
                String sql = "select  distinct month(tgl) as month, year(tgl) as year from journal_detail;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboperiod = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        month_sql_gl = Integer.valueOf(rs.getString("month")),
                        year_sql_gl = rs.getString("year"),};

                    switch (month_sql_gl) {
                        case 1:
                            comboperiod.addElement("January " + year_sql_gl);
                            break;
                        case 2:
                            comboperiod.addElement("February " + year_sql_gl);
                            break;
                        case 3:
                            comboperiod.addElement("March " + year_sql_gl);
                            break;
                        case 4:
                            comboperiod.addElement("April " + year_sql_gl);
                            break;
                        case 5:
                            comboperiod.addElement("May " + year_sql_gl);
                            break;
                        case 6:
                            comboperiod.addElement("June " + year_sql_gl);
                            break;
                        case 7:
                            comboperiod.addElement("July " + year_sql_gl);
                            break;
                        case 8:
                            comboperiod.addElement("August " + year_sql_gl);
                            break;
                        case 9:
                            comboperiod.addElement("September " + year_sql_gl);
                            break;
                        case 10:
                            comboperiod.addElement("October " + year_sql_gl);
                            break;
                        case 11:
                            comboperiod.addElement("November " + year_sql_gl);
                            break;
                        case 12:
                            comboperiod.addElement("December " + year_sql_gl);
                            break;
                        default:
                            break;
                    }

                }
                cboPeriod_GL.setModel(comboperiod);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }
    private String chart_name_gl;

    private void comboChart_GL() {

        try {
            if (conn != null) {
                String sql = "select  distinct chart_name from journal_detail;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel combochart = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        chart_name_gl = rs.getString("chart_name"),};

                    combochart.addElement(chart_name_gl);

                }
                cboChart_GL.setModel(combochart);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }
    private String product_INV, pid_sql, pname_sql;

    private void comboProduct_INV() {

        try {
            if (conn != null) {
                String sql = "select  pid, product_name from productlist order by pno;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboproduct = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        pid_sql = rs.getString("pid"),
                        pname_sql = rs.getString("product_name"),};
                    product_INV = pid_sql + " " + pname_sql;
                    comboproduct.addElement(product_INV);

                }
                cboProduct_INV.setModel(comboproduct);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void comboSorterBuyProduct_INV() {

        try {
            if (conn != null) {
                String sql = "select  pid, product_name from productlist order by pno;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboproduct = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        pid_sql = rs.getString("pid"),
                        pname_sql = rs.getString("product_name"),};
                    product_INV = pid_sql + " " + pname_sql;
                    comboproduct.addElement(product_INV);

                }
                cboSorterBuyProduct_INV.setModel(comboproduct);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew_Journal;
    private javax.swing.JButton btnAddProduct_INV;
    private javax.swing.JButton btnAdd_INV;
    private javax.swing.JButton btnDeleteBuyProduct_INV;
    private javax.swing.JButton btnDelete_INV;
    private javax.swing.JButton btnDelete_Journal;
    private javax.swing.JButton btnLaunchSearcher;
    private javax.swing.JButton btnNewBuyProduct_INV;
    private javax.swing.JButton btnProcess_INV;
    private javax.swing.JButton btnSaveData_Journal;
    private javax.swing.JButton btnSave_GL;
    private javax.swing.JButton btnSearchBuyProduct_INV;
    private javax.swing.JButton btnSearch_BS;
    private javax.swing.JButton btnSearch_GL;
    private javax.swing.JButton btnSearch_Journal;
    private javax.swing.JButton btnSearch_PL;
    private javax.swing.JButton btnSearch_TB;
    private javax.swing.JButton btnUpdateBuyProduct_INV;
    private javax.swing.JButton btnUpdate_INV;
    private javax.swing.JButton btnUpdate_Journal;
    private javax.swing.JButton btnView_Journal;
    private javax.swing.JComboBox<String> cboChart_GL;
    private javax.swing.JComboBox<String> cboINVperiod_INV;
    private javax.swing.JComboBox<String> cboPeriod_BS;
    private javax.swing.JComboBox<String> cboPeriod_GL;
    private javax.swing.JComboBox<String> cboPeriod_PL;
    private javax.swing.JComboBox<String> cboPeriod_TB;
    private javax.swing.JComboBox<String> cboProductName_INV;
    private javax.swing.JComboBox<String> cboProduct_INV;
    private javax.swing.JComboBox<String> cboSorterBuyProduct_INV;
    private com.toedter.calendar.JDateChooser dateChooser;
    private com.toedter.calendar.JDateChooser dtcProductAdded_INV;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblRefreshInventory_INV;
    private javax.swing.JLabel lblRefreshProduct_GL;
    private javax.swing.JLabel lblRefreshTransactionProduct_GL;
    private javax.swing.JLabel lblRefresh_GL;
    private javax.swing.JMenuItem menuLogOut;
    private javax.swing.JMenuItem menuRefresh;
    private javax.swing.JSpinner spiQty_INV;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblAsset_BS;
    private javax.swing.JTable tblBuyProduct;
    private javax.swing.JTable tblCOGS_PL;
    private javax.swing.JTable tblCapital_BS;
    private javax.swing.JTable tblGL;
    private javax.swing.JTable tblInventory_INV;
    private javax.swing.JTable tblJournalMaker;
    private javax.swing.JTable tblLiability_BS;
    private javax.swing.JTable tblOpExpend_PL;
    private javax.swing.JTable tblSalesRevenue_PL;
    private javax.swing.JTable tblTB;
    private javax.swing.JTextField txtAvg_INV;
    private javax.swing.JTextField txtBalance_GL;
    public static javax.swing.JTextField txtChartName_Journal;
    public static javax.swing.JTextField txtChartNumber_Journal;
    private javax.swing.JTextField txtCredit_Journal;
    private javax.swing.JTextField txtDebit_Journal;
    private javax.swing.JTextArea txtDesc_Journal;
    private javax.swing.JTextField txtEnd_INV;
    private javax.swing.JTextField txtGrossProfitLoss_PL;
    private javax.swing.JTextField txtID_INV;
    private javax.swing.JTextField txtIn_INV;
    private javax.swing.JTextField txtJID_Journal;
    private javax.swing.JTextField txtNetProfitLoss_PL;
    private javax.swing.JTextField txtOpening_INV;
    private javax.swing.JTextField txtOut_INV;
    private javax.swing.JTextField txtPID_INV;
    private javax.swing.JTextField txtPName_INV;
    private javax.swing.JTextField txtPrice_INV;
    private javax.swing.JTextField txtProductPrice_INV;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStatus_GL;
    private javax.swing.JTextField txtSubTotal_INV;
    private javax.swing.JTextField txtTCredit_GL;
    private javax.swing.JTextField txtTDebit_GL;
    private javax.swing.JTextField txtTRID;
    private javax.swing.JTextField txtTotalAsset_BS;
    private javax.swing.JTextField txtTotalCOGS_PL;
    private javax.swing.JTextField txtTotalCapital_BS;
    private javax.swing.JTextField txtTotalCapitalnLiability_BS;
    private javax.swing.JTextField txtTotalCredit_Journal;
    private javax.swing.JTextField txtTotalDebit_Journal;
    private javax.swing.JTextField txtTotalLiability_BS;
    private javax.swing.JTextField txtTotalOperationalExpenditure_PL;
    private javax.swing.JTextField txtTotalSalesRevenue_PL;
    private javax.swing.JTextField txtValue_INV;
    // End of variables declaration//GEN-END:variables

    private void deletePreviousData() throws SQLException {

        String saveSql = "delete from akuntansi.journal_temporary where jid is not null;";
        PreparedStatement pstatement = conn.prepareStatement(saveSql);
        pstatement.executeUpdate();
        pstatement.close();

    }

    public void dispose() {
        if (Sutil.msq(this, "Do you want to log out?") == 0) {
            try {
                deletePreviousData();
                this.setVisible(false);
                FrmMain fm = new FrmMain();
                fm.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void executeRefresh() {
        executeNew();
        txtDesc_Journal.setText("");
        loadJournal_Temporary();
        txtChartNumber_Journal.requestFocusInWindow();
    }
    private String year_java_gl, month_java_gl, chartname_gl;
    private Double tprevdebit_gl, tprevcredit_gl, tprevbalance_gl;

    private void loadGL_GL() {

        String date = String.valueOf(cboPeriod_GL.getSelectedItem());
        String[] parts = date.split(" ");
        month_java_gl = parts[0];
        year_java_gl = parts[1];
        if (month_java_gl.equals("January")) {
            month_sql_gl = 1;
        } else if (month_java_gl.equals("February")) {
            month_sql_gl = 2;
        } else if (month_java_gl.equals("March")) {
            month_sql_gl = 3;
        } else if (month_java_gl.equals("April")) {
            month_sql_gl = 4;
        } else if (month_java_gl.equals("May")) {
            month_sql_gl = 5;
        } else if (month_java_gl.equals("June")) {
            month_sql_gl = 6;
        } else if (month_java_gl.equals("July")) {
            month_sql_gl = 7;
        } else if (month_java_gl.equals("August")) {
            month_sql_gl = 8;
        } else if (month_java_gl.equals("September")) {
            month_sql_gl = 9;
        } else if (month_java_gl.equals("October")) {
            month_sql_gl = 10;
        } else if (month_java_gl.equals("November")) {
            month_sql_gl = 11;
        } else if (month_java_gl.equals("December")) {
            month_sql_gl = 12;
        }
        int i = 1;
        try {
            if (conn != null) {

                chartname_gl = String.valueOf(cboChart_GL.getSelectedItem());
                //ADD PREVIOS BALANCE
                String addprevbalancesql = "select sum(debit)as tdebit, sum(credit)as tcredit from journal_detail where chart_name=? and month(tgl) = ? and year(tgl)=?;";
                PreparedStatement pstatement_prev = conn.prepareStatement(addprevbalancesql);
                DefaultTableModel model = (DefaultTableModel) tblGL.getModel();
                pstatement_prev.setString(1, chartname_gl);
                pstatement_prev.setString(2, String.valueOf(month_sql_gl - 1));
                pstatement_prev.setString(3, year_java_gl);

                Double tdebit, tcredit;

                ResultSet rs_prev = pstatement_prev.executeQuery();
                while (rs_prev.next()) {
                    tdebit = rs_prev.getDouble("tdebit");
                    tcredit = rs_prev.getDouble("tcredit");

                    if (tdebit - tcredit > 0) {
                        tprevdebit_gl = tdebit - tcredit;
                        tprevbalance_gl = tprevdebit_gl;
                        tprevcredit_gl = 0.0;
                    } else {
                        tprevcredit_gl = tcredit - tdebit;
                        tprevbalance_gl = tprevcredit_gl;
                        tprevdebit_gl = 0.0;
                    }

                    Object data[] = {
                        "",
                        "J-000",
                        "Prev Balance",
                        tprevdebit_gl,
                        tprevcredit_gl
                    };
                    model.addRow(data);

                };

                String sql = "select * from journal_detail where chart_name=? and month(tgl) = ? and year(tgl)=? order by jid;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultTableModel model2 = (DefaultTableModel) tblGL.getModel();
                pstatement.setString(1, chartname_gl);
                pstatement.setString(2, String.valueOf(month_sql_gl));
                pstatement.setString(3, year_java_gl);
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        rs.getDate("tgl"),
                        rs.getString("jid"),
                        rs.getString("description"),
                        rs.getDouble("debit"),
                        rs.getDouble("credit")
                    };
                    model2.addRow(data);

                };
            }

        } catch (SQLException ex) {
            System.out.println("Error:\nsini3" + ex.getLocalizedMessage());

        }
        cboChart_GL.setEnabled(false);
        cboPeriod_GL.setEnabled(false);
    }

    private Double tnowdebit_gl, tnowcredit_gl, tnowbalance_gl;

    private void generateTotalGL() {
        try {
            if (conn != null) {
                String sql = "select sum(debit)as tdebit, sum(credit)as tcredit from journal_detail where chart_name=? and month(tgl) = ? and year(tgl)=?;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultTableModel model = (DefaultTableModel) tblGL.getModel();
                pstatement.setString(1, chartname_gl);
                pstatement.setString(2, String.valueOf(month_sql_gl));
                pstatement.setString(3, year_java_gl);
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    tnowdebit_gl = rs.getDouble("tdebit");
                    tnowcredit_gl = rs.getDouble("tcredit");

                    tnowbalance_gl = tnowdebit_gl + tprevdebit_gl - tnowcredit_gl - tprevcredit_gl;

                    txtTDebit_GL.setText(String.valueOf(tnowdebit_gl + tprevdebit_gl));
                    txtTCredit_GL.setText(String.valueOf(tnowcredit_gl + tprevcredit_gl));
                    txtBalance_GL.setText(String.valueOf(tnowbalance_gl));

                };
            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }
    }
    private int count_gl;
    private Double totalbalance_gl;

    private void checkUpdatesGL() throws SQLException {
        String countsql = "select count(id_gl) as counter from gl_master where id_gl=?;";
        PreparedStatement pstatement_prev = conn.prepareStatement(countsql);
        DefaultTableModel model = (DefaultTableModel) tblGL.getModel();
        pstatement_prev.setString(1, year_java_gl + "/" + month_sql_gl + "/" + chartname_gl);
        ResultSet rs_count = pstatement_prev.executeQuery();
        while (rs_count.next()) {

            count_gl = rs_count.getInt("counter");
        };

        if (count_gl > 0) {

            try {
                String checksql = "select * from gl_master where id_gl=?;";
                PreparedStatement pstatement_check = conn.prepareStatement(checksql);
                pstatement_check.setString(1, year_java_gl + "/" + month_sql_gl + "/" + chartname_gl);
                ResultSet rs_check = pstatement_check.executeQuery();
                while (rs_check.next()) {

                    totalbalance_gl = rs_check.getDouble("balance");
                };

                if (Objects.equals(totalbalance_gl, tnowbalance_gl)) {
                    txtStatus_GL.setText("UP TO DATE");
                } else {
                    txtStatus_GL.setText("NOT UPDATED");
                }

                rs_check.close();
                pstatement_check.close();
            } catch (SQLException ex) {
                System.out.println("Error:\n sini1" + ex.getLocalizedMessage());
            }
        } else {
            txtStatus_GL.setText("UNSAVED DATA");
        }
    }

    private void executeSaveGL() {
        try {

            String saveGLSql = "insert into gl_master values(?,?,?,?,?,?,?) on duplicate key update chart_name=?, period=?, debit=?, credit=?,prev_balance=?, balance=?; ";
            PreparedStatement pstatementsaveGL = conn.prepareStatement(saveGLSql);
            pstatementsaveGL.setString(1, year_java_gl + "/" + month_sql_gl + "/" + chartname_gl);
            pstatementsaveGL.setString(2, chartname_gl);
            pstatementsaveGL.setString(3, month_java_gl + " " + year_java_gl);
            pstatementsaveGL.setString(4, String.valueOf(tnowdebit_gl));
            pstatementsaveGL.setString(5, String.valueOf(tnowcredit_gl));
            pstatementsaveGL.setString(6, String.valueOf(tprevbalance_gl));
            pstatementsaveGL.setString(7, txtBalance_GL.getText().trim());
            pstatementsaveGL.setString(8, chartname_gl);
            pstatementsaveGL.setString(9, month_java_gl + " " + year_java_gl);
            pstatementsaveGL.setString(10, txtTDebit_GL.getText().trim());
            pstatementsaveGL.setString(11, txtTCredit_GL.getText().trim());
            pstatementsaveGL.setString(12, String.valueOf(tprevbalance_gl));
            pstatementsaveGL.setString(13, txtBalance_GL.getText().trim());
            pstatementsaveGL.executeUpdate();
            pstatementsaveGL.close();
            Sutil.msg(this, "Data has been saved.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void executeRefresh_GL() {
        cboChart_GL.setEnabled(true);
        cboPeriod_GL.setEnabled(true);
        removeTableData_GL();
        txtTDebit_GL.setText("");
        txtTCredit_GL.setText("");
        txtBalance_GL.setText("");
        txtStatus_GL.setText("");
    }
    private int counterpid, pno;
    private String pid, pname;

    private void executeAddProduct() {

        try {
            String countpidSql = "select count(pno)as counter,max(pno) as max_pno from productlist;";
            PreparedStatement pstatement_countpid = conn.prepareStatement(countpidSql);
            ResultSet rs = pstatement_countpid.executeQuery();
            if (rs.isBeforeFirst()) { // check is resultset not empty
                while (rs.next()) {
                    counterpid = rs.getInt("counter");
                    pno = rs.getInt("max_pno");

                }
            }

            rs.close();
            pstatement_countpid.close();

            if (counterpid == 0) {
                pno = 1;
                pid = "P-00" + pno;
            } else {
                pid = "P-00" + (pno + 1);

            }
            txtPID_INV.setText(pid);

            executeSaveProduct();
            comboProduct_INV();
            comboSorterBuyProduct_INV();
            btnAddProduct_INV.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void executeSaveProduct() {
        try {
            String insertProductSql = "insert into akuntansi.productlist values (?,?,?)";
            PreparedStatement pstatement_insertproduct = conn.prepareStatement(insertProductSql);
            pstatement_insertproduct.setString(1, txtPID_INV.getText());
            pstatement_insertproduct.setInt(2, pno + 1);
            pstatement_insertproduct.setString(3, txtPName_INV.getText());
            pstatement_insertproduct.executeUpdate();

            pstatement_insertproduct.close();
            Sutil.msg(this, "Product " + pid + " has been added.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private String selectedbuyproduct;

    private void executeInsertBuyProduct() {
        try {
            DefaultTableModel tableModel = (DefaultTableModel) tblBuyProduct.getModel();
            int qty = (Integer) spiQty_INV.getValue();
            selectedbuyproduct = String.valueOf(cboProduct_INV.getSelectedItem());
            String insertBuySql = "insert into product_transaction(tr_date,product_name,qty,price,sub_total) values (?,?,?,?,?)";
            PreparedStatement pstatement_insertbuy = conn.prepareStatement(insertBuySql);
            pstatement_insertbuy.setDate(1, convertUtilDateToSql(dtcProductAdded_INV.getDate()));
            pstatement_insertbuy.setString(2, selectedbuyproduct);
            pstatement_insertbuy.setInt(3, qty);
            pstatement_insertbuy.setDouble(4, Double.valueOf(txtPrice_INV.getText()));
            pstatement_insertbuy.setDouble(5, Double.valueOf(txtSubTotal_INV.getText()));
            pstatement_insertbuy.executeUpdate();
            pstatement_insertbuy.close();
            Sutil.msg(this, "Transaction added successfully.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void tblBuyProductSelectionListener() {
        ListSelectionListener listener2 = (ListSelectionEvent e) -> {
            int row_BuyProduct = tblBuyProduct.getSelectedRow();
            if (row_BuyProduct >= 0) {
                txtTRID.setText(tblBuyProduct.getValueAt(row_BuyProduct, 0).toString());
                dtcProductAdded_INV.setDate((Date) tblBuyProduct.getValueAt(row_BuyProduct, 1));
                cboProduct_INV.setSelectedItem((String) selectedpname);
                spiQty_INV.setValue((Object) tblBuyProduct.getValueAt(row_BuyProduct, 2));
                txtPrice_INV.setText(tblBuyProduct.getValueAt(row_BuyProduct, 3).toString());
                txtSubTotal_INV.setText(tblBuyProduct.getValueAt(row_BuyProduct, 4).toString());

            }
        };
        tblBuyProduct.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblBuyProduct.getSelectionModel().addListSelectionListener(listener2);
        btnUpdateBuyProduct_INV.setEnabled(true);

    }
    private String selectedperiod_INV;

    private void tblINVSelectionListener() {

        ListSelectionListener listener2 = (ListSelectionEvent e) -> {
            int row_INV = tblInventory_INV.getSelectedRow();
            if (row_INV >= 0) {
                txtID_INV.setText(tblInventory_INV.getValueAt(row_INV, 0).toString());
                cboProductName_INV.setSelectedItem(tblInventory_INV.getValueAt(row_INV, 1).toString());
                txtProductPrice_INV.setText(tblInventory_INV.getValueAt(row_INV, 2).toString());
                txtOpening_INV.setText(tblInventory_INV.getValueAt(row_INV, 3).toString());
                txtIn_INV.setText(tblInventory_INV.getValueAt(row_INV, 4).toString());
                txtOut_INV.setText(tblInventory_INV.getValueAt(row_INV, 6).toString());
                txtEnd_INV.setText(tblInventory_INV.getValueAt(row_INV, 8).toString());
                txtValue_INV.setText(tblInventory_INV.getValueAt(row_INV, 9).toString());

                System.out.println("id: " + tblInventory_INV.getValueAt(row_INV, 0).toString());
                comboPeriod_INV();
                getcomboperiod_INV();

                cboINVperiod_INV.setSelectedItem(selectedperiod_INV);

            }
        };
        tblInventory_INV.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblInventory_INV.getSelectionModel().addListSelectionListener(listener2);

    }

    private void executeUpdateBuyProduct() {
        try {

            int qty = (Integer) spiQty_INV.getValue();
            Double price = Double.valueOf(txtPrice_INV.getText());
            Double sub = Double.valueOf(txtSubTotal_INV.getText());
            String updateBuySql = "UPDATE akuntansi.product_transaction SET "
                    + " tr_date=?,product_name=?,qty=?,price=?,sub_total=? WHERE tr_id=?";
            PreparedStatement pstatement_updatebuy = conn.prepareStatement(updateBuySql);
            pstatement_updatebuy.setDate(1, convertUtilDateToSql(dtcProductAdded_INV.getDate()));
            pstatement_updatebuy.setString(2, String.valueOf(cboProduct_INV.getSelectedItem()));
            pstatement_updatebuy.setInt(3, qty);
            pstatement_updatebuy.setDouble(4, price);
            pstatement_updatebuy.setDouble(5, sub);
            pstatement_updatebuy.setString(6, txtTRID.getText());
            pstatement_updatebuy.executeUpdate();
            pstatement_updatebuy.close();

            Sutil.msg(this, "Update successful.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllBuyProduct() {
        try {
            String sql = "select * from product_transaction;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            DefaultTableModel model = (DefaultTableModel) tblBuyProduct.getModel();
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                Object data[] = {
                    rs.getString("tr_id"),
                    rs.getDate("tr_date"),
                    rs.getInt("qty"),
                    rs.getDouble("price"),
                    rs.getDouble("sub_total"),};
                model.addRow(data);

            };

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }
    }

    private void executeRefreshBuyProduct() {
        spiQty_INV.setValue(0);
        txtPrice_INV.setText("");
        txtTRID.setText("");
        txtSubTotal_INV.setText("");
        btnNewBuyProduct_INV.setEnabled(true);
        btnUpdateBuyProduct_INV.setEnabled(true);
        btnSearchBuyProduct_INV.setEnabled(true);
    }

    private void executeDeleteBuyProduct() {
        try {
            String updateSql = "DELETE FROM akuntansi.product_transaction WHERE tr_id = ?;";
            PreparedStatement pstatement = conn.prepareStatement(updateSql);
            pstatement.setString(1, txtTRID.getText().trim());
            pstatement.executeUpdate();
            pstatement.close();
            executeNew();
            Sutil.msg(this, "Delete successful.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private String selectedpname;

    private void loadSpecificBuyProduct() {
        try {
            String sql = "select * from product_transaction where product_name=?;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            pstatement.setString(1, (String) cboSorterBuyProduct_INV.getSelectedItem());
            DefaultTableModel model = (DefaultTableModel) tblBuyProduct.getModel();
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                selectedpname = rs.getString("product_name");

                Object data[] = {
                    rs.getString("tr_id"),
                    rs.getDate("tr_date"),
                    rs.getInt("qty"),
                    rs.getDouble("price"),
                    rs.getDouble("sub_total"),};
                model.addRow(data);

            };

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }
        btnSearchBuyProduct_INV.setEnabled(false);
        btnNewBuyProduct_INV.setEnabled(false);
    }

    private void generateAvg() {
        try {
            String generateavgsql = "select sum(sub_total) as total, sum(qty) as qty from product_transaction where product_name=?;";
            PreparedStatement pstatement = conn.prepareStatement(generateavgsql);
            pstatement.setString(1, (String) cboSorterBuyProduct_INV.getSelectedItem());
            DefaultTableModel model = (DefaultTableModel) tblBuyProduct.getModel();
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                Double total = rs.getDouble("total");
                int qty = rs.getInt("qty");
                Double avg;
                avg = total / qty;
                txtAvg_INV.setText(String.valueOf(avg));

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }
    }
    private String id_inv;
    private int no_inv;

    private void executeInsertINV() {
        try {
            if (maxdatainv == 0) {
                no_inv = 1;
                id_inv = "INV-00" + no_inv;
            } else {
                no_inv = maxdatainv + 1;
                id_inv = "INV-00" + no_inv;
            }

            DefaultTableModel tableModel = (DefaultTableModel) tblInventory_INV.getModel();
            Double price = Double.valueOf(txtProductPrice_INV.getText());
            int open = Integer.valueOf(txtOpening_INV.getText());
            int in = Integer.valueOf(txtIn_INV.getText());
            int out = Integer.valueOf(txtOut_INV.getText());
            int end = Integer.valueOf(txtEnd_INV.getText());
            String insertBuySql = "insert into inventory values (?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pstatement_addINV = conn.prepareStatement(insertBuySql);
            pstatement_addINV.setString(1, id_inv);
            pstatement_addINV.setString(2, String.valueOf(cboINVperiod_INV.getSelectedItem().toString()));
            pstatement_addINV.setString(3, String.valueOf(cboProductName_INV.getSelectedItem()));
            pstatement_addINV.setDouble(4, price);
            pstatement_addINV.setInt(5, open);
            pstatement_addINV.setInt(6, in);
            pstatement_addINV.setDouble(7, price * in);
            pstatement_addINV.setInt(8, out);
            pstatement_addINV.setDouble(9, price * out);
            pstatement_addINV.setInt(10, end);
            pstatement_addINV.setDouble(11, Double.valueOf(txtValue_INV.getText()));
            pstatement_addINV.executeUpdate();
            pstatement_addINV.close();
            Sutil.msg(this, "Inventory added successfully.");
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void comboPeriod_INV() {

        try {
            if (conn != null) {
                String sql = "select  distinct month(tgl) as month, year(tgl) as year from journal_detail;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboperiod_INV = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        month_sql_gl = Integer.valueOf(rs.getString("month")),
                        year_sql_gl = rs.getString("year"),};

                    switch (month_sql_gl) {
                        case 1:
                            comboperiod_INV.addElement("January " + year_sql_gl);
                            break;
                        case 2:
                            comboperiod_INV.addElement("February " + year_sql_gl);
                            break;
                        case 3:
                            comboperiod_INV.addElement("March " + year_sql_gl);
                            break;
                        case 4:
                            comboperiod_INV.addElement("April " + year_sql_gl);
                            break;
                        case 5:
                            comboperiod_INV.addElement("May " + year_sql_gl);
                            break;
                        case 6:
                            comboperiod_INV.addElement("June " + year_sql_gl);
                            break;
                        case 7:
                            comboperiod_INV.addElement("July " + year_sql_gl);
                            break;
                        case 8:
                            comboperiod_INV.addElement("August " + year_sql_gl);
                            break;
                        case 9:
                            comboperiod_INV.addElement("September " + year_sql_gl);
                            break;
                        case 10:
                            comboperiod_INV.addElement("October " + year_sql_gl);
                            break;
                        case 11:
                            comboperiod_INV.addElement("November " + year_sql_gl);
                            break;
                        case 12:
                            comboperiod_INV.addElement("December " + year_sql_gl);
                            break;
                        default:
                            break;
                    }

                }
                cboINVperiod_INV.setModel(comboperiod_INV);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void loadINV() {
        try {
            String sql = "select * from inventory;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            DefaultTableModel model = (DefaultTableModel) tblInventory_INV.getModel();
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                Object data[] = {
                    rs.getString("inv_id"),
                    rs.getString("product_name"),
                    rs.getDouble("price"),
                    rs.getInt("opening"),
                    rs.getInt("in_inv"),
                    rs.getDouble("value_in"),
                    rs.getInt("out_inv"),
                    rs.getDouble("value_out"),
                    rs.getInt("ending"),
                    rs.getDouble("value_end")};
                model.addRow(data);

            };

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());

        }
    }

    private void executeUpdateINV() {

    }

    private void getcomboperiod_INV() {
        try {

            String sql = "SELECT period FROM akuntansi.inventory where inv_id=?;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            pstatement.setString(1, (String) tblInventory_INV.getValueAt(row, 0));
            ResultSet rs = pstatement.executeQuery();
            if (rs.isBeforeFirst()) { // check is resultset not empty
                while (rs.next()) {
                    selectedperiod_INV = rs.getString("period");

                }
            } else {

            }
            rs.close();
            pstatement.close();
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void refreshFormINV() {
        txtID_INV.setText("");
        cboProductName_INV.setSelectedIndex(1);
        txtProductPrice_INV.setText("");
    }

    private void getProductName() {

    }
    private String period_TB;

    private void comboPeriod_TB() {

        try {
            if (conn != null) {
                String sql = "select distinct(period) from gl_master;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboperiod_TB = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        period_TB = rs.getString("period"),};
                    comboperiod_TB.addElement(period_TB);
                }
                cboPeriod_TB.setModel(comboperiod_TB);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void removeTableData_TB() {
        DefaultTableModel tableModel = (DefaultTableModel) tblTB.getModel();
        tableModel.setRowCount(0);
    }

    private Double open_TB, debit_TB, credit_TB, prevbalance_TB, prevdebit_TB, prevcredit_TB;

    private void loadTB_TB() {
        try {

            setPrevBalance_TB();

            String sql = "select cl.chart_no, gl.chart_name, gl.prev_balance, gl.debit, gl.credit from gl_master gl inner join chartlist cl on gl.chart_name = cl.chart_name where gl.period=?;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            DefaultTableModel model2 = (DefaultTableModel) tblTB.getModel();
            pstatement.setString(1, cboPeriod_TB.getSelectedItem().toString());
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {

                open_TB = rs.getDouble("gl.prev_balance");
                debit_TB = rs.getDouble("gl.debit");
                credit_TB = rs.getDouble("gl.credit");
                Object data[] = {
                    rs.getString("cl.chart_no"),
                    rs.getString("gl.chart_name"),
                    open_TB,
                    debit_TB,
                    credit_TB,
                    open_TB + debit_TB - credit_TB
                };
                model2.addRow(data);

            };
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void setPrevBalance_TB() {
        try {

            String sql = "select prev_balance, debit, credit from gl_master where period=?;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            DefaultTableModel model2 = (DefaultTableModel) tblTB.getModel();
            pstatement.setString(1, cboPeriod_TB.getSelectedItem().toString());
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {

                Object data[] = {
                    prevbalance_TB = rs.getDouble("prev_balance"),
                    prevdebit_TB = rs.getDouble("debit"),
                    prevcredit_TB = rs.getDouble("credit"),};

                if (prevbalance_TB < 0) {
                    prevdebit_TB = 0.0;
                    prevcredit_TB = prevbalance_TB;
                } else if (prevbalance_TB > 0) {
                    prevcredit_TB = 0.0;
                    prevdebit_TB = prevbalance_TB;
                }

            };
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void comboAddINV_Product() {
        try {
            if (conn != null) {
                String sql = "select  pid, product_name from productlist order by pno;";
                PreparedStatement pstatement = conn.prepareStatement(sql);
                DefaultComboBoxModel comboproduct = new DefaultComboBoxModel();
                ResultSet rs = pstatement.executeQuery();
                while (rs.next()) {
                    Object data[] = {
                        pid_sql = rs.getString("pid"),
                        pname_sql = rs.getString("product_name"),};
                    product_INV = pid_sql + " " + pname_sql;
                    comboproduct.addElement(product_INV);

                }
                cboProductName_INV.setModel(comboproduct);

            }

        } catch (SQLException ex) {
            System.out.println("Error:\n" + ex.getLocalizedMessage());
        }
    }

    private void checkDataINV() {
        try {
            String sql = "select  count(inv_id) as counter from inventory where period=? and product_name=?;";
            PreparedStatement pstatement = conn.prepareStatement(sql);
            pstatement.setString(1, cboINVperiod_INV.getSelectedItem().toString());
            pstatement.setString(2, cboProductName_INV.getSelectedItem().toString());
            ResultSet rs = pstatement.executeQuery();
            while (rs.next()) {
                Object data[] = {
                    datainv = rs.getInt("counter"),};

            }

            String maxinv_sql = "select max(inv_id) from inventory ;";
            PreparedStatement maxinv_pstatement = conn.prepareStatement(maxinv_sql);
            ResultSet rs_maxinv = maxinv_pstatement.executeQuery();
            while (rs_maxinv.next()) {
                maxdatainv = rs_maxinv.getInt("counter");

            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
